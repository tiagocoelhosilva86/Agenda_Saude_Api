// <auto-generated />
using System;
using AgendaSaude.Api.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendaSaude.Api.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240714031903_Inicialmigration")]
    partial class Inicialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgendaSaude.Api.Domain.Entities.Agendamento", b =>
                {
                    b.Property<Guid>("IdAgenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ConfirmacaoAgendamento")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAgendamendo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("IdPagamento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<string>("ValorConsulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAgenda");

                    b.HasIndex("IdPagamento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("AgendaSaude.Api.Domain.Entities.Pagamento", b =>
                {
                    b.Property<Guid>("IdPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tipopagamento")
                        .HasColumnType("int");

                    b.HasKey("IdPagamento");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("AgendaSaude.Api.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AgendaSaude.Api.Domain.Entities.Agendamento", b =>
                {
                    b.HasOne("AgendaSaude.Api.Domain.Entities.Pagamento", "Pagamento")
                        .WithMany("Agendamento")
                        .HasForeignKey("IdPagamento")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AgendaSaude.Api.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Agendamento")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pagamento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AgendaSaude.Api.Domain.Entities.Pagamento", b =>
                {
                    b.Navigation("Agendamento");
                });

            modelBuilder.Entity("AgendaSaude.Api.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Agendamento");
                });
#pragma warning restore 612, 618
        }
    }
}
